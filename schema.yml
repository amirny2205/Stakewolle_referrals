openapi: 3.0.3
info:
  title: Stakewolle referrals
  version: 1.0.0
  description: Stakewolle referrals project
paths:
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    post:
      operationId: auth_users_create
      description: Create user
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /auth/users/{id}/:
    delete:
      operationId: auth_users_destroy
      description: Delete current user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /my_referral_codes/:
    get:
      operationId: my_referral_codes_list
      description: Get referral codes that current user owns
      tags:
      - my_referral_codes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferralCode'
          description: ''
    post:
      operationId: my_referral_codes_create
      description: Create new referral code
      tags:
      - my_referral_codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCode'
          description: ''
  /my_referral_codes/{code_str}/:
    get:
      operationId: my_referral_codes_retrieve
      description: Retrieve a single code by it's code_str
      parameters:
      - in: path
        name: code_str
        schema:
          type: string
        description: A unique value identifying this referral code.
        required: true
      tags:
      - my_referral_codes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCode'
          description: ''
    put:
      operationId: my_referral_codes_update
      description: Fully update a referral code instance
      parameters:
      - in: path
        name: code_str
        schema:
          type: string
        description: A unique value identifying this referral code.
        required: true
      tags:
      - my_referral_codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferralCodeViewsetSwaggerSerializerUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCode'
          description: ''
    patch:
      operationId: my_referral_codes_partial_update
      description: Partially update a referral code instance
      parameters:
      - in: path
        name: code_str
        schema:
          type: string
        description: A unique value identifying this referral code.
        required: true
      tags:
      - my_referral_codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReferralCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReferralCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReferralCode'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralCode'
          description: ''
    delete:
      operationId: my_referral_codes_destroy
      description: Delete a referral code instance
      parameters:
      - in: path
        name: code_str
        schema:
          type: string
        description: A unique value identifying this referral code.
        required: true
      tags:
      - my_referral_codes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /my_referrals/:
    get:
      operationId: my_referrals_list
      description: Get a list of users that used any of your referral codes
      tags:
      - my_referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    PatchedReferralCode:
      type: object
      properties:
        code_str:
          type: string
          maxLength: 64
        active:
          type: boolean
        expiry_date:
          type: string
          format: date-time
        user:
          type: integer
    ReferralCode:
      type: object
      properties:
        code_str:
          type: string
          maxLength: 64
        active:
          type: boolean
        expiry_date:
          type: string
          format: date-time
        user:
          type: integer
      required:
      - expiry_date
      - user
    ReferralCodeViewsetSwaggerSerializerCreate:
      type: object
      properties:
        expiry_date:
          type: string
          format: date-time
        active:
          type: boolean
          default: false
        send_email:
          type: boolean
          default: false
      required:
      - expiry_date
    ReferralCodeViewsetSwaggerSerializerUpdate:
      type: object
      properties:
        expiry_date:
          type: string
          format: date-time
        active:
          type: boolean
        user:
          type: integer
        code_str:
          type: string
      required:
      - active
      - code_str
      - expiry_date
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
      required:
      - id
      - username
    UserRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        referral_code_for_registration:
          type: string
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
